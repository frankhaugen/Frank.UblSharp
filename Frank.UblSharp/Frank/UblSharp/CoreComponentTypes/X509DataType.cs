//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1144.0
namespace Frank.UblSharp.CoreComponentTypes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Diagnostics.CodeAnalysis;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;


    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1144.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("X509DataType", Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    [DebuggerStepThroughAttribute()]
    [XmlRootAttribute("X509Data", Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class X509DataType
    {

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value uniquely identifying this entity.</para>
        /// </summary>
        [DescriptionAttribute("Gets or sets a value uniquely identifying this entity.")]
        [RequiredAttribute(AllowEmptyStrings = true)]
        [XmlIgnoreAttribute()]
        [KeyAttribute()]
        public long Id { get; set; }

        [XmlElementAttribute("X509IssuerSerial")]
        public Collection<X509IssuerSerialType> X509IssuerSerial { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the X509IssuerSerial collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool X509IssuerSerialSpecified
        {
            get
            {
                return ((this.X509IssuerSerial != null)
                            && (this.X509IssuerSerial.Count != 0));
            }
        }

        [XmlElementAttribute("X509SKI", DataType = "base64Binary")]
        public Collection<Byte[]> X509Ski { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the X509Ski collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool X509SkiSpecified
        {
            get
            {
                return ((this.X509Ski != null)
                            && (this.X509Ski.Count != 0));
            }
        }

        [XmlElementAttribute("X509SubjectName")]
        public Collection<string> X509SubjectName { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the X509SubjectName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool X509SubjectNameSpecified
        {
            get
            {
                return ((this.X509SubjectName != null)
                            && (this.X509SubjectName.Count != 0));
            }
        }

        [XmlElementAttribute("X509Certificate", DataType = "base64Binary")]
        public Collection<Byte[]> X509Certificate { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the X509Certificate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool X509CertificateSpecified
        {
            get
            {
                return ((this.X509Certificate != null)
                            && (this.X509Certificate.Count != 0));
            }
        }

        [XmlElementAttribute("X509CRL", DataType = "base64Binary")]
        public Collection<Byte[]> X509Crl { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the X509Crl collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool X509CrlSpecified
        {
            get
            {
                return ((this.X509Crl != null)
                            && (this.X509Crl.Count != 0));
            }
        }

        [XmlAnyElementAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public Collection<System.Xml.Linq.XElement> Any { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null)
                            && (this.Any.Count != 0));
            }
        }
    }
}
