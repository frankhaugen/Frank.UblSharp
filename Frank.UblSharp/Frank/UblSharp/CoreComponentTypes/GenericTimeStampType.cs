//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1144.0
namespace Frank.UblSharp.CoreComponentTypes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Diagnostics.CodeAnalysis;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;


    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1144.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("GenericTimeStampType", Namespace = "http://uri.etsi.org/01903/v1.3.2#")]
    [DebuggerStepThroughAttribute()]
    [XmlIncludeAttribute(typeof(AllDataObjectsTimeStamp))]
    [XmlIncludeAttribute(typeof(ArchiveTimeStamp))]
    [XmlIncludeAttribute(typeof(Frank.UblSharp.CoreComponentTypes.ArchiveTimeStampV2))]
    [XmlIncludeAttribute(typeof(IndividualDataObjectsTimeStamp))]
    [XmlIncludeAttribute(typeof(OtherTimeStampType))]
    [XmlIncludeAttribute(typeof(RefsOnlyTimeStamp))]
    [XmlIncludeAttribute(typeof(SigAndRefsTimeStamp))]
    [XmlIncludeAttribute(typeof(SignatureTimeStamp))]
    [XmlIncludeAttribute(typeof(XAdEsTimeStamp))]
    [XmlIncludeAttribute(typeof(XAdEsTimeStampType))]
    public abstract partial class GenericTimeStampType
    {

        [XmlElementAttribute("Include")]
        public Collection<IncludeType> Include { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Include collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool IncludeSpecified
        {
            get
            {
                return ((this.Include != null)
                            && (this.Include.Count != 0));
            }
        }

        [XmlElementAttribute("ReferenceInfo")]
        public Collection<ReferenceInfoType> ReferenceInfo { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReferenceInfo collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool ReferenceInfoSpecified
        {
            get
            {
                return ((this.ReferenceInfo != null)
                            && (this.ReferenceInfo.Count != 0));
            }
        }

        [AllowNullAttribute()]
        [MaybeNullAttribute()]
        [XmlElementAttribute("CanonicalizationMethod", Namespace = "http://www.w3.org/2000/09/xmldsig#")]
        public Frank.UblSharp.CoreComponentTypes.CanonicalizationMethodType_2 CanonicalizationMethod { get; set; }

        [XmlElementAttribute("EncapsulatedTimeStamp")]
        public Collection<EncapsulatedPkiDataType> EncapsulatedTimeStamp { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EncapsulatedTimeStamp collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool EncapsulatedTimeStampSpecified
        {
            get
            {
                return ((this.EncapsulatedTimeStamp != null)
                            && (this.EncapsulatedTimeStamp.Count != 0));
            }
        }

        [XmlElementAttribute("XMLTimeStamp")]
        public Collection<AnyType> XmlTimeStamp { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the XmlTimeStamp collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool XmlTimeStampSpecified
        {
            get
            {
                return ((this.XmlTimeStamp != null)
                            && (this.XmlTimeStamp.Count != 0));
            }
        }

        [AllowNullAttribute()]
        [MaybeNullAttribute()]
        [XmlAttributeAttribute("Id")]
        [KeyAttribute()]
        public string Id { get; set; }
    }
}
