// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Manual changes to this file will be overwritten if the code is regenerated.
//
// </auto-generated>
//------------------------------------------------------------------------------
namespace Frank.UblSharp.CommonAggregateComponents
{
    using Frank.UblSharp.UnqualifiedDataTypes;
    
    
    /// <summary>
    /// A class to describe a significant occurrence or happening related to the transportation of goods.
    /// <para />ComponentType: ABIE
    /// <para />DictionaryEntryName: Transport Event. Details
    /// <para />ObjectClass: Transport Event
    /// </summary>
#if FEATURE_SERIALIZATION
    [System.SerializableAttribute()]
#endif
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AcceptanceTransportEvent", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2")]
    [System.Xml.Serialization.XmlRootAttribute("AcceptanceTransportEvent", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2", IsNullable=false)]
    public partial class TransportEventType
    {
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("IdentificationID", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", Order=0)]
        public IdentifierType @__IdentificationID;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OccurrenceDate", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", Order=1)]
        public DateType @__OccurrenceDate;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OccurrenceTime", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", Order=2)]
        public TimeType @__OccurrenceTime;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("TransportEventTypeCode", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", Order=3)]
        public CodeType @__TransportEventTypeCode;
        
        private System.Collections.Generic.List<TextType> _description;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Description", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", Order=4)]
        public TextType[] @__Description
        {
            get
            {
                return _description?.ToArray();
            }
            set
            {
                _description = value == null ? null : new System.Collections.Generic.List<TextType>(value);
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("CompletionIndicator", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", Order=5)]
        public IndicatorType @__CompletionIndicator;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ReportedShipment", Order=6)]
        public ShipmentType @__ReportedShipment;
        
        private System.Collections.Generic.List<StatusType> _currentStatus;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("CurrentStatus", Order=7)]
        public StatusType[] @__CurrentStatus
        {
            get
            {
                return _currentStatus?.ToArray();
            }
            set
            {
                _currentStatus = value == null ? null : new System.Collections.Generic.List<StatusType>(value);
            }
        }
        
        private System.Collections.Generic.List<ContactType> _contact;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Contact", Order=8)]
        public ContactType[] @__Contact
        {
            get
            {
                return _contact?.ToArray();
            }
            set
            {
                _contact = value == null ? null : new System.Collections.Generic.List<ContactType>(value);
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Location", Order=9)]
        public LocationType @__Location;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Signature", Order=10)]
        public SignatureType @__Signature;
        
        private System.Collections.Generic.List<PeriodType> _period;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Period", Order=11)]
        public PeriodType[] @__Period
        {
            get
            {
                return _period?.ToArray();
            }
            set
            {
                _period = value == null ? null : new System.Collections.Generic.List<PeriodType>(value);
            }
        }
        
        /// <summary>
        /// Text describing this transport event.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Transport Event. Description. Text
        /// <para />Cardinality: 0..n
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTerm: Description
        /// <para />RepresentationTerm: Text
        /// <para />DataType: Text. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Collections.Generic.List<TextType> Description
        {
            get { return _description ?? (_description = new System.Collections.Generic.List<TextType>()); }
            set { _description = value; }
        }

        
        /// <summary>
        /// The current status of this transport event.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Transport Event. Current_ Status. Status
        /// <para />Cardinality: 0..n
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTermQualifier: Current
        /// <para />PropertyTerm: Status
        /// <para />AssociatedObjectClass: Status
        /// <para />RepresentationTerm: Status
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Collections.Generic.List<StatusType> CurrentStatus
        {
            get { return _currentStatus ?? (_currentStatus = new System.Collections.Generic.List<StatusType>()); }
            set { _currentStatus = value; }
        }

        
        /// <summary>
        /// A contact associated with this transport event.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Transport Event. Contact
        /// <para />Cardinality: 0..n
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTerm: Contact
        /// <para />AssociatedObjectClass: Contact
        /// <para />RepresentationTerm: Contact
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Collections.Generic.List<ContactType> Contact
        {
            get { return _contact ?? (_contact = new System.Collections.Generic.List<ContactType>()); }
            set { _contact = value; }
        }

        
        /// <summary>
        /// A period of time associated with this transport event.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Transport Event. Period
        /// <para />Cardinality: 0..n
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTerm: Period
        /// <para />AssociatedObjectClass: Period
        /// <para />RepresentationTerm: Period
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Collections.Generic.List<PeriodType> Period
        {
            get { return _period ?? (_period = new System.Collections.Generic.List<PeriodType>()); }
            set { _period = value; }
        }

        
        /// <summary>
        /// An identifier for this transport event within an agreed event identification scheme.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Transport Event. Identification. Identifier
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTerm: Identification
        /// <para />RepresentationTerm: Identifier
        /// <para />DataType: Identifier. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public IdentifierType IdentificationID
        {
            get
            {
                if (__IdentificationID == null) { __IdentificationID = new IdentifierType(); }
                return __IdentificationID;
            }
            set
            {
                __IdentificationID = value;
            }
        }

        
        /// <summary>
        /// The date of this transport event.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Transport Event. Occurrence Date. Date
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTerm: Occurrence Date
        /// <para />RepresentationTerm: Date
        /// <para />DataType: Date. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public DateType OccurrenceDate
        {
            get
            {
                if (__OccurrenceDate == null) { __OccurrenceDate = new DateType(); }
                return __OccurrenceDate;
            }
            set
            {
                __OccurrenceDate = value;
            }
        }

        
        /// <summary>
        /// The time of this transport event.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Transport Event. Occurrence Time. Time
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTerm: Occurrence Time
        /// <para />RepresentationTerm: Time
        /// <para />DataType: Time. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public TimeType OccurrenceTime
        {
            get
            {
                if (__OccurrenceTime == null) { __OccurrenceTime = new TimeType(); }
                return __OccurrenceTime;
            }
            set
            {
                __OccurrenceTime = value;
            }
        }

        
        /// <summary>
        /// A code signifying the type of this transport event.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Transport Event. Transport Event Type Code. Code
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTerm: Transport Event Type Code
        /// <para />RepresentationTerm: Code
        /// <para />DataType: Code. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public CodeType TransportEventTypeCode
        {
            get
            {
                if (__TransportEventTypeCode == null) { __TransportEventTypeCode = new CodeType(); }
                return __TransportEventTypeCode;
            }
            set
            {
                __TransportEventTypeCode = value;
            }
        }

        
        /// <summary>
        /// An indicator that this transport event has been completed (true) or not (false).
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Transport Event. Completion_ Indicator. Indicator
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTermQualifier: Completion
        /// <para />PropertyTerm: Indicator
        /// <para />RepresentationTerm: Indicator
        /// <para />DataType: Indicator. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public IndicatorType CompletionIndicator
        {
            get
            {
                if (__CompletionIndicator == null) { __CompletionIndicator = new IndicatorType(); }
                return __CompletionIndicator;
            }
            set
            {
                __CompletionIndicator = value;
            }
        }

        
        /// <summary>
        /// The shipment involved in this transport event.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Transport Event. Reported_ Shipment. Shipment
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTermQualifier: Reported
        /// <para />PropertyTerm: Shipment
        /// <para />AssociatedObjectClass: Shipment
        /// <para />RepresentationTerm: Shipment
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public ShipmentType ReportedShipment
        {
            get
            {
                if (__ReportedShipment == null) { __ReportedShipment = new ShipmentType(); }
                return __ReportedShipment;
            }
            set
            {
                __ReportedShipment = value;
            }
        }

        
        /// <summary>
        /// The location associated with this transport event.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Transport Event. Location
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTerm: Location
        /// <para />AssociatedObjectClass: Location
        /// <para />RepresentationTerm: Location
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public LocationType Location
        {
            get
            {
                if (__Location == null) { __Location = new LocationType(); }
                return __Location;
            }
            set
            {
                __Location = value;
            }
        }

        
        /// <summary>
        /// A signature that can be used to sign for an entry or an exit at a transport location (e.g., port terminal).
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Transport Event. Signature
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Transport Event
        /// <para />PropertyTerm: Signature
        /// <para />AssociatedObjectClass: Signature
        /// <para />RepresentationTerm: Signature
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public SignatureType Signature
        {
            get
            {
                if (__Signature == null) { __Signature = new SignatureType(); }
                return __Signature;
            }
            set
            {
                __Signature = value;
            }
        }

    }
}
